# =============================================================================
# CONFIGURACAO PARA LOGS MIKROTIK RB750GR3 (ASCII, SEM ACENTOS)
# =============================================================================

# ======================
# ENTRADA
# ======================
input {
  udp {
    host  => "0.0.0.0"
    port  => 514
    codec => "line"
    type => "mikrotik_firewall"
  }
}

# ======================
# FILTRO
# ======================
filter {
  if [type] == "mikrotik_firewall" {

    # Firewall drop
    if [message] =~ /(?i)\bdrop\b/ {
      grok {
        match => {
          "message" => "proto %{WORD:protocol}.*?%{IPORHOST:source_ip}:%{POSINT:source_port}->%{IPORHOST:destination_ip}:%{POSINT:destination_port}"
        }
        add_tag => "firewall_parsed_main"
      }

      if "firewall_parsed_main" in [tags] {
        grok {
          match => { "message" => "in:(?<interface>[^ ]+)" }
        }
        grok {
          match => { "message" => "src-mac (?<mac>%{COMMONMAC})" }
        }
        mutate {
          add_field => { "source" => "%{source_ip}:%{source_port}" }
          add_field => { "destination" => "%{destination_ip}:%{destination_port}" }
        }
      }

      mutate {
        add_field => { "topic" => "firewall_drop" }
        add_field => { "action" => "Drop" }
        add_field => { "priority" => "high" }
        add_field => { "alert_type" => "firewall_drop" }
        add_field => { "severity" => "info" }
      }
    }

    # DNS events
    if [message] =~ /dns,packet/ {
      mutate {
        add_field => { "topic" => "dns_event" }
        add_field => { "severity" => "info" }
        add_field => { "priority" => "medium" }
        add_field => { "alert_type" => "dns_event" }
        add_field => { "action" => "DNS_Query" }
      }
    }
  }
}

# ======================
# SAIDAS
# ======================
output {
  elasticsearch {
    hosts       => ["http://elasticsearch:9200"]
    index       => "mikrotik-firewall-%{+YYYY.MM.dd}"
    action      => "index"
    data_stream => false
  }

  if [topic] == "firewall_drop" and [action] == "Drop" {
    http {
      url           => "http://telegram_bridge:8080/notify"
      http_method   => "post"
      content_type  => "application/json"
      format        => "json"
      mapping => {
        "@timestamp"   => "%{@timestamp}"
        "host"         => "%{[host][ip]}"
        "topic"        => "%{topic}"
        "severity"     => "%{severity}"
        "action"       => "%{action}"
        "proto"        => "%{protocol}"
        "srcip"        => "%{source_ip}"
        "srcport"      => "%{source_port}"
        "dstip"        => "%{destination_ip}"
        "dstport"      => "%{destination_port}"
        "message"      => "%{message}"
        "priority"     => "%{priority}"
        "alert_type"   => "%{alert_type}"
        "src_mac"      => "%{mac}"
        "in_interface" => "%{interface}"
      }
    }
  }

  # DNS events disabled to reduce spam
  # if [topic] == "dns_event" and [priority] == "medium" {
  #   http {
  #     url          => "http://telegram_bridge:8080/notify"
  #     http_method  => "post"
  #     content_type => "application/json"
  #     format       => "json"
  #     mapping => {
  #       "@timestamp"   => "%{@timestamp}"
  #       "host"         => "%{[host][ip]}"
  #       "topic"        => "%{topic}"
  #       "severity"     => "%{severity}"
  #       "action"       => "%{action}"
  #       "message"      => "%{message}"
  #       "priority"     => "%{priority}"
  #       "alert_type"   => "%{alert_type}"
  #     }
  #   }
  # }
}
